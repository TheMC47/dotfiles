#+TITLE: My emacs doom configuration
#+AUTHOR: Yecine Megdiche
#+EMAIL: yecine.megdiche@gmail.com
#+LANGUAGE: en
#+STARTUP: inlineimages
#+PROPERTY: header-args :results silent :padline no
* Table of Contents :TOC:
- [[#general][General]]
- [[#ui][UI]]
- [[#dired][Dired]]
- [[#snippets-yasnippet][Snippets: YASnippet]]
- [[#projectile][Projectile]]
- [[#python][Python]]
- [[#haskell][Haskell]]
- [[#javascript][JavaScript]]
- [[#pdf][PDF]]

* General
Place your private configuration here! Remember, you do not need to run 'doom refresh' after modifying this file!
#+BEGIN_SRC emacs-lisp
;;; $DOOMDIR/config.el -*- lexical-binding: t; -*-
#+END_SRC
These are used for a number of things, particularly for GPG configuration, some email clients, file templates and snippets.
#+BEGIN_SRC emacs-lisp
(setq user-full-name "Yecine Megdiche"
      user-mail-address "yecine.megdiche@gmail.com")
#+END_SRC
* UI
Don't truncate long lines
#+BEGIN_SRC emacs-lisp
(setq truncate-lines nil)
#+END_SRC
Doom exposes five (optional) variables for controlling fonts in Doom. Here are the three important ones:
+ ~doom-font~
+ ~doom-variable-pitch-font~
+ ~doom-big-font~ -- used for ~doom-big-font-mode~
They all accept either a font-spec, font string ("Input Mono-12"), or xlfd font string. You generally only need these two:
#+BEGIN_SRC emacs-lisp
(setq ;; doom-font (font-spec :family "Source Code Pro"
      ;;                      :size (pcase (system-name)
      ;;                              ("yecine-xps159560" 26)
      ;;                              (_ 14)))
      doom-variable-pitch-font (font-spec :family "sans")
      doom-font (font-spec :family "Hasklig"
                           :size (pcase (system-name)
                                   ("yecine-xps159560" 26)
                                   (_ 14))))
#+END_SRC
There are two ways to load a theme. Both assume the theme is installed and available. You can either set ~doom-theme~ or manually load a theme with the ~load-theme~ function. These are the defaults.
#+BEGIN_SRC emacs-lisp
(setq doom-theme 'doom-nord)
#+END_SRC
Another bright theme I like to use is ~doom-one-light~
For the line-numbers, these are the possible values:
+ ~relative~
+ ~absolute~
+ ~nil~, which disables the number line
#+BEGIN_SRC emacs-lisp
(setq display-line-numbers-type `relative)
#+END_SRC
This makes treemacs prettier
#+BEGIN_SRC emacs-lisp
(setq doom-themes-treemacs-theme "doom-colors")
#+END_SRC
Use space indentation everywhere
#+BEGIN_SRC emacs-lisp
(setq-default indent-tabs-mode nil)
#+END_SRC
And finally, spice up the splash screen
#+begin_src emacs-lisp
(setq fancy-splash-image (concat doom-private-dir "club-mate.svg"))
#+end_src

* Dired
Use ~ in a ~dired~ buffer to go to the home directory.
#+BEGIN_SRC emacs-lisp
(defun my/dired-go-home ()
  (interactive)
  (dired "~"))

(map!
 :after dired
 :map dired-mode-map
 :n "~" #'my/dired-go-home)

#+END_SRC
* Snippets: YASnippet
A dedicated key (other than ~TAB~) for expanding snippets.
#+BEGIN_SRC emacs-lisp
(map!
 :after yasnippet
 :map yas-minor-mode-map
 :i "C-," #'yas-expand)

#+END_SRC
* Projectile
Projectile is just great. Here I register django as a custom project type
#+BEGIN_SRC emacs-lisp
(after! projectile
  (projectile-register-project-type 'npm '("manage.py")
                                    :test "python manage.py test"
                                    :run "python manage.py runserver"))
 #+END_SRC
And almost always, whenever I'm opening a new project, I want to see the magit buffer (unless there's no git repo)
 #+begin_src emacs-lisp
(defun open-magit-or-dired (DIRECTORY)
  (interactive)
  (let ((toplevel (magit-toplevel DIRECTORY)))
          (setq DIRECTORY (file-name-as-directory
                           (expand-file-name DIRECTORY)))
          (if (and toplevel (file-equal-p DIRECTORY toplevel))
              (magit-status-setup-buffer DIRECTORY)
            (dired DIRECTORY))))


(setq +workspaces-switch-project-function #'open-magit-or-dired)

 #+end_src
* Python
#+begin_src emacs-lisp
(add-hook! python-mode
  (flycheck-select-checker 'python-flake8))
(put 'py-isort-options 'safe-local-variable #'listp)
#+end_src
* Haskell
#+begin_src emacs-lisp
(setq lsp-haskell-formatting-provider "brittany")
#+end_src
* JavaScript
#+begin_src emacs-lisp
(setq-hook! #'typescript-tsx-mode +format-with-lsp nil)
#+end_src

* PDF
- Some customization to set midnight clors and resize factor
#+BEGIN_SRC emacs-lisp
(setq pdf-view-resize-factor 1.1)
#+END_SRC
